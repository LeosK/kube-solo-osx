#!/bin/bash

# get App's Resources folder
res_folder=$(cat ~/kube-solo/.env/resouces_path)

#
source "${res_folder}"/functions.sh

function pause(){
    read -p "$*"
}

# get VM's IP
vm_ip=$(~/bin/corectl q -i k8solo-01)

# get lastest macOS helm and deis cli version
download_osx_clients

# add Deis Workflow Chart repo
helm repo add deis https://charts.deis.com/workflow

# updare repos charts list
helm repo update
echo " "

# copy files to ~/kube-solo/tmp folder
cp "${res_folder}"/deis/* ~/kube-solo/tmp

#
cd ~/kube-solo/tmp

# cleanup previuos install
rm -rf workflow

# fetch latest Workflow version and untar into the folder
helm fetch deis/workflow --untar

# update minio deployment with persistent volume
"${res_folder}"/bin/gsed -i '/readOnly: true/ r deis-minio-ds-1.txt' ~/kube-solo/tmp/workflow/charts/minio/templates/minio-deployment.yaml
"${res_folder}"/bin/gsed -i '/secretName: minio-user/ r deis-minio-ds-2.txt' ~/kube-solo/tmp/workflow/charts/minio/templates/minio-deployment.yaml

# update deis router
"${res_folder}"/bin/gsed -i 's/type: LoadBalancer/#type: LoadBalancer/' ~/kube-solo/tmp/workflow/charts/router/templates/router-service.yaml

rm -f *.txt

# Install/upgrade Deis Workflow
echo "Installing/upgrading Workflow to latest available version ..."
helm upgrade workflow ./workflow --namespace=deis -i

sleep 3

#
echo "Waiting for Deis Workflow to be ready... but first, coffee! "
spin='-\|/'
i=1
until kubectl --namespace=deis get po | grep [d]eis-minio- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-builder- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-registry- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-database- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-router- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-controller- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
#

sleep 10

# run deis register user
echo " "
echo "Registering admin user ..."
deis register http://deis.$vm_ip.nip.io

# add ssh key to Deis PaaS
echo " "
echo "Adding ssh key to Deis Workflow ... "
deis keys:add ~/.ssh/id_rsa.pub

echo " "
echo "Cloning some demo Apps for testing to ~/kube-solo/deis/apps ... "
rm -fr ~/kube-solo/deis/apps
mkdir -p ~/kube-solo/deis/apps
cd ~/kube-solo/deis/apps
git clone https://github.com/deis/example-dockerfile-http
git clone https://github.com/deis/helloworld.git
git clone https://github.com/deis/example-go.git
echo " "

cd ~/kube-solo/deis/apps

echo "Deis Workflow install is completed ..."
echo "Deis Workflow IP is http://deis.$vm_ip.nip.io "
echo " "
echo "Please read docs how to:" 
echo "To deploy Applications - https://deis.com/docs/workflow/applications/deploying-apps/"
echo "Deis Workflow concepts - https://deis.com/docs/workflow/understanding-workflow/concepts/"
echo " "
